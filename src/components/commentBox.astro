---
const { postSlug } = Astro.props;

import { supabase } from "../lib/supabase";
const { data: comments, error: fetchError } = await supabase
  .from("comments")
  .select("*")
  .eq("post_slug", postSlug);

if (fetchError) {
  console.error("Error fetching comments:", fetchError);
}
---

<div class="comments-section">
  <div class="comment-box">
    <h3>Deja un comentario</h3>
    <form id="comment-form" data-post-slug={postSlug}>
      <div class="form-group">
        <label for="name">Nombre</label>
        <input type="text" id="name" name="name" required />
      </div>
      <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required />
      </div>
      <div class="form-group">
        <label for="comment">Comentario</label>
        <textarea id="comment" name="comment" rows="4" required></textarea>
      </div>
      <button type="submit">Enviar comentario</button>
    </form>
    <div id="form-status"></div>
  </div>

  <!-- Lista de comentarios existentes -->
  <div class="comments-list" id="comments-list">
    <h3>Comentarios</h3>
    {
      comments && comments.length > 0 ? (
        comments.map((comment) => (
          <div class="comment">
            <p>
              <strong>{comment.name}</strong>
            </p>
            <p>{comment.comment}</p>
          </div>
        ))
      ) : (
        <p>No hay comentarios todavía. ¡Sé el primero!</p>
      )
    }
  </div>
</div>

<script>
  import { supabase } from "../lib/supabase";

  const commentForm = document.getElementById("comment-form");
  const formStatus = document.getElementById("form-status");
  const commentsList = document.getElementById("comments-list");

  commentForm.addEventListener("submit", async (event) => {
    event.preventDefault();

    const postSlug = commentForm.dataset.postSlug;

    const formData = new FormData(commentForm);
    const name = formData.get("name");
    const email = formData.get("email");
    const commentText = formData.get("comment");

    // 3. Incluye el 'postSlug' al insertar el nuevo comentario
    const { data, error } = await supabase
      .from("comments")
      .insert([
        // Asegúrate de que las columnas coincidan con tu tabla
        { name: name, email: email, comment: commentText, post_slug: postSlug },
      ])
      .select()
      .single();

    if (error) {
      console.error("Error inserting comment:", error);
      formStatus.textContent = "Error al enviar el comentario.";
      formStatus.style.color = "red";
    } else {
      formStatus.textContent = "¡Comentario enviado con éxito!";
      formStatus.style.color = "green";
      commentForm.reset();

      // 4. Añade el nuevo comentario a la lista dinámicamente
      if (data) {
        const newCommentElement = document.createElement("div");
        newCommentElement.classList.add("comment");
        newCommentElement.innerHTML = `<p><strong>${data.name}</strong></p><p>${data.comment}</p>`;

        // Si es el primer comentario, elimina el mensaje "No hay comentarios"
        const noCommentsMessage = commentsList.querySelector("p");
        if (
          noCommentsMessage &&
          noCommentsMessage.textContent.includes("No hay comentarios")
        ) {
          noCommentsMessage.remove();
        }

        commentsList.appendChild(newCommentElement);
      }
    }
  });
</script>

<style>
  .comments-section {
    font-family: sans-serif;
    max-width: 600px;
    margin: 40px auto;
  }
  .comment-box {
    border: 1px solid #ccc;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 30px;
  }
  .form-group {
    margin-bottom: 15px;
  }
  label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
  }
  input,
  textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
  }
  button {
    background-color: #007bff;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
  }
  button:hover {
    background-color: #0056b3;
  }
  #form-status {
    margin-top: 15px;
    font-weight: bold;
  }
  .comments-list h3 {
    margin-bottom: 20px;
  }
  .comment {
    border: 1px solid #eee;
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 15px;
    background-color: #f9f9f9;
  }
  .comment p:first-child {
    margin: 0 0 5px 0;
  }
  .comment p:last-child {
    margin: 0;
  }
</style>
